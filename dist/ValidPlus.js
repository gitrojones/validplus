(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["ValidPlus"] = factory();
	else
		root["ValidPlus"] = factory();
})(window, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./validplus.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Field.js":
/*!**********************!*\
  !*** ./src/Field.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _debug = __webpack_require__(/*! ./util/debug */ \"./src/util/debug.js\");\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _mergeDeep = __webpack_require__(/*! ./util/mergeDeep */ \"./src/util/mergeDeep.js\");\n\nvar _mergeDeep2 = _interopRequireDefault(_mergeDeep);\n\nvar _events = __webpack_require__(/*! ./lib/events */ \"./src/lib/events.js\");\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _messaging = __webpack_require__(/*! ./lib/messaging */ \"./src/lib/messaging.js\");\n\nvar _messaging2 = _interopRequireDefault(_messaging);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar filterNullObj = function filterNullObj(obj) {\n  return Object.keys(obj).reduce(function (newObj, key) {\n    var value = obj[key];\n\n    if (value !== null && typeof value !== 'undefined') {\n      newObj[key] = value;\n    }\n\n    return newObj;\n  }, {});\n};\nvar isValidRule = function isValidRule(rule) {\n  return typeof rule !== 'undefined' && rule !== null;\n};\nvar toBoolean = function toBoolean(string) {\n  var def = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (typeof string !== 'string' || string.length === 0) return def;\n\n  if (string.toLowerCase() === 'true') return true;\n  if (string.toLowerCase() === 'false') return false;\n  return !!string;\n};\n\nvar VPField = function VPField(element, options, customRules) {\n  var _this = this;\n\n  var onValidate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (!(element instanceof Element)) {\n    throw new Error('[VPField] Field Element must be instance of Element.');\n  }\n\n  this.input = null;\n  this.element = element;\n  this.listeners = {};\n  this.canValidate = true;\n  this.options = Object.assign({\n    forceRules: false,\n    rules: {\n      required: null,\n      min: null,\n      max: null,\n      minLength: null,\n      maxLength: null,\n      pattern: null\n    },\n    formatter: {\n      pre: null,\n      post: null\n    },\n    errorClass: '-isError',\n    messageAnchor: null,\n    messagePOS: 'bottom',\n    showFieldErrors: false,\n    dirtyOnBlur: toBoolean(element.getAttribute('vp-dirty'), false),\n    validateOnBlur: toBoolean(element.getAttribute('vp-blur'), true),\n    watch: toBoolean(element.getAttribute('vp-watch'), true)\n  }, options);\n\n  this._onValidation = (0, _mergeDeep2.default)({\n    isValid: {\n      message: null,\n      cb: null\n    },\n    isInvalid: {\n      message: null,\n      cb: null\n    }\n  }, onValidate);\n  this._customRules = customRules;\n\n  this._messageNode = null;\n  this._messages = [];\n  this._isValid = null;\n  this._dirty = false;\n\n  this.getInput();\n  if (this.options.watch === true && this.input instanceof Element) {\n\n    if (['radio', 'checkbox'].includes(this.input.getAttribute('type'))) {\n      this.input.addEventListener('change', function () {\n        if (_this.options.dirtyOnBlur === false) {\n          _this._dirty = true;\n        }\n\n        if (_this.canValidate === true && _this._dirty === true) {\n          var emit = _this._isValid !== null;\n\n          var valid = _this.isValid();\n          if (emit) {\n            _this.dispatchEvent(new Event('onValidate', {\n              bubbles: false, cancelable: false }), valid);\n          }\n        }\n      });\n    } else {\n      this.input.addEventListener('input', function () {\n        if (_this.options.dirtyOnBlur === false) {\n          _this._dirty = true;\n        }\n\n        if (_this.canValidate === true && _this._dirty === true) {\n          var emit = _this._isValid !== null;\n\n          var valid = _this.isValid();\n          if (emit) {\n            _this.dispatchEvent(new Event('onValidate', {\n              bubbles: false, cancelable: false }), valid);\n          }\n        }\n      });\n    }\n\n    this.input.addEventListener('blur', function () {\n      _this._dirty = true;\n\n      if (_this.options.validateOnBlur) {\n        var valid = _this.isValid();\n        _this.dispatchEvent(new Event('onValidate', {\n          bubbles: false, cancelable: false }), valid);\n      }\n    });\n  }\n};\n\nVPField.prototype.parseInput = function () {\n  if (!(this.input instanceof Element)) {\n    throw new Error('[VPField] Input must be an instance of Element');\n  }\n\n  var inputRules = filterNullObj({\n    min: this.input.getAttribute('min'),\n    minLength: this.input.getAttribute('minlength'),\n    max: this.input.getAttribute('max'),\n    maxLength: this.input.getAttribute('maxlength'),\n    pattern: this.input.getAttribute('pattern'),\n    required: this.input.getAttribute('required')\n  });\n\n  var rules = this.options.forceRules ? Object.assign({}, inputRules, this.options.rules) : Object.assign({}, this.options.rules, inputRules);\n\n  return {\n    value: this.input.value,\n    checked: this.input.checked,\n    type: this.input.getAttribute('type'),\n    name: this.input.getAttribute('data-name') || this.input.getAttribute('name') || this.input.tagName,\n    rules: rules\n  };\n};\n\nVPField.prototype.getInput = function () {\n  (0, _debug2.default)('[VPField] Querying inputs');\n\n  var input = this.element.getElementsByTagName('input');\n  var select = this.element.getElementsByTagName('select');\n  var textarea = this.element.getElementsByTagName('textarea');\n\n  if (input.length > 0) (0, _debug2.default)('[VPField] Found input', input);\n  if (select.length > 0) (0, _debug2.default)('[VPField] Found select', select);\n  if (textarea.length > 0) (0, _debug2.default)('[VPField] Found textarea', textarea);\n\n  this.input = [].concat(Array.from(input), Array.from(select), Array.from(textarea))[0];\n\n  // if (this.input instanceof Element) {\n  // TODO: Clobber w/ VueJS, figure out how to support\n  // this.input.setAttribute('__value', this.input.value)\n\n  // Object.defineProperty(this.input, 'value', {\n  //   configurable: true,\n  //   enumerable: true,\n  //   get: function () {\n  //     return this.getAttribute('__value')\n  //   },\n  //   set: function (val) {\n  //     this.setAttribute('__value', val)\n\n  //     if (this.tagName.toLowerCase() === 'input' && ['radio', 'checkbox'].includes(this.getAttribute('type'))) {\n  //       this.dispatchEvent(new Event('change'))\n  //     } else {\n  //       this.dispatchEvent(new Event('input'))\n  //     }\n  //   }\n  // })\n  // }\n};\n\nVPField.prototype.isValid = function () {\n  var _this2 = this;\n\n  this.canValidate = false;\n  if (typeof this.options.formatter.pre === 'function') {\n    this.options.formatter.pre(this.input);\n  }\n\n  var attributes = this.parseInput();\n  var value = attributes.value,\n      checked = attributes.checked,\n      message = attributes.message,\n      action = attributes.action,\n      type = attributes.type,\n      name = attributes.name,\n      rules = attributes.rules;\n\n\n  var errors = [];\n  if (typeof this._customRules === 'function') {\n    errors.push(this._customRules(attributes, this.element, this.input));\n  } else if (Array.isArray(this._customRules)) {\n    errors = errors.concat(this._customRules.map(function (rule) {\n      if (typeof rule === 'function') {\n        return rule(attributes, _this2.element, _this2.input);\n      }\n\n      return true;\n    }));\n  }\n\n  if (isValidRule(rules.min)) {\n    errors.push(+value >= +rules.min ? true : name + ' must be more than ' + rules.min + '.');\n  }\n  if (isValidRule(rules.max)) {\n    errors.push(+value <= +rules.max ? true : name + ' must be less than ' + rules.max + '.');\n  }\n  if (isValidRule(rules.minLength)) {\n    errors.push(value.length >= +rules.minLength ? true : name + ' must be ' + rules.minLength + ' characters or more.');\n  }\n  if (isValidRule(rules.maxLength)) {\n    errors.push(value.length <= +rules.maxLength ? true : name + ' must be ' + rules.maxLength + ' characters or less.');\n  }\n  if (isValidRule(rules.pattern)) {\n    errors.push((rules.pattern instanceof RegExp ? rules.pattern.test(value) : new RegExp(rules.pattern).test(value)) ? true : name + ' is incorrectly formatted.');\n  }\n\n  switch (type) {\n    case 'checkbox':\n      if (isValidRule(rules.required) && rules.required) {\n        errors.push(checked ? true : name + ' is required.');\n      }\n      break;\n    case 'radio':\n      // One should always be selected\n      errors.push(checked);\n      break;\n    default:\n      if (isValidRule(rules.required) && rules.required) {\n        errors.push(value.length > 0 ? true : name + ' is required.');\n      }\n  }\n\n  this.clearMessages();\n  this._isValid = errors.every(function (err) {\n    return err === true;\n  });\n\n  if (typeof this.options.formatter.pre === 'string') {\n    this.addMessage(this.options.formatter.pre, '-isInfo');\n  }\n\n  if (this._isValid) {\n    this.element.classList.remove(this.options.errorClass);\n\n    if (typeof this._onValidation.isValid.cb === 'function') {\n      this._onValidation.isValid.cb();\n    }\n    if (typeof this._onValidation.isValid.message === 'string') {\n      this.addMessage(this._onValidation.isValid.message, '-isValid');\n    }\n  } else {\n    this.element.classList.add(this.options.errorClass);\n\n    if (typeof this._onValidation.isInvalid.cb === 'function') {\n      this._onValidation.isInvalid.cb();\n    }\n\n    if (this.options.showFieldErrors) {\n      errors.filter(function (err) {\n        return typeof err === 'string';\n      }).forEach(function (err) {\n        _this2.addMessage(err, '-isError');\n      });\n    }\n\n    if (typeof this._onValidation.isInvalid.message === 'string') {\n      this.addMessage(this._onValidation.isInvalid.message, '-isError');\n    }\n  }\n\n  if (typeof this.options.formatter.post === 'function') {\n    this.options.formatter.post(this.input, value);\n  }\n\n  this.canValidate = true;\n  return this._isValid;\n};\n\n// EventTarget\nVPField.prototype.listeners = null;\nVPField.prototype.addEventListener = _events2.default.addEventListener;\nVPField.prototype.removeEventListener = _events2.default.removeEventListener;\nVPField.prototype.dispatchEvent = _events2.default.dispatchEvent;\n\n// DOM Messaging\nVPField.prototype.clearMessages = _messaging2.default.clearMessages;\nVPField.prototype.removeMessage = _messaging2.default.removeMessage;\nVPField.prototype.addMessage = _messaging2.default.addMessage('VPMessage');\n\nexports.default = VPField;\n\n//# sourceURL=webpack://ValidPlus/./src/Field.js?");

/***/ }),

/***/ "./src/Fieldset.js":
/*!*************************!*\
  !*** ./src/Fieldset.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Field = __webpack_require__(/*! ./Field */ \"./src/Field.js\");\n\nvar _Field2 = _interopRequireDefault(_Field);\n\nvar _debug = __webpack_require__(/*! ./util/debug */ \"./src/util/debug.js\");\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _mergeDeep = __webpack_require__(/*! ./util/mergeDeep */ \"./src/util/mergeDeep.js\");\n\nvar _mergeDeep2 = _interopRequireDefault(_mergeDeep);\n\nvar _isElemVisible = __webpack_require__(/*! ./util/isElemVisible */ \"./src/util/isElemVisible.js\");\n\nvar _isElemVisible2 = _interopRequireDefault(_isElemVisible);\n\nvar _events = __webpack_require__(/*! ./lib/events */ \"./src/lib/events.js\");\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _messaging = __webpack_require__(/*! ./lib/messaging */ \"./src/lib/messaging.js\");\n\nvar _messaging2 = _interopRequireDefault(_messaging);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Options include\n// ---------------\n// showMessage: <false> - Fieldset level error shown\n// noChildren: <false> - No children errors (field level)\n// fieldClass: 'field' - Child 'Field' className\n//\n\nvar VPFieldset = function VPFieldset(element, strategy, options) {\n  var onValidate = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (!(element instanceof Element)) {\n    throw new Error('[VPFieldset] Valid Element is required.');\n  }\n\n  if (typeof strategy !== 'function') {\n    throw new Error('[VPFieldset] Validation strategy passed is invalid.');\n  }\n\n  this.strategy = strategy;\n  this.element = element;\n  this.listeners = {};\n  this.options = Object.assign({\n    validateVisible: true,\n    fieldClass: 'VPField',\n    errorClass: '-isError',\n    messageAnchor: null,\n    messagePOS: 'bottom',\n    scrollAnchor: null,\n    scrollTo: true,\n    watch: true\n  }, options);\n\n  this._onValidation = (0, _mergeDeep2.default)({\n    isValid: {\n      message: null,\n      cb: null\n    },\n    isInvalid: {\n      message: null,\n      cb: null\n    }\n  }, onValidate);\n  this._fields = [];\n  this._isValid = null;\n\n  this._messageNode = null;\n  this._messages = [];\n};\n\nVPFieldset.prototype.isValid = function () {\n  var _this = this;\n\n  var fieldSetStatus = this._fields.reduce(function (status, field, index) {\n    (0, _debug2.default)('[VPFieldset] Validating field', index);\n    if (_this.options.validateVisible) {\n      if ((0, _isElemVisible2.default)(field.element)) {\n        (0, _debug2.default)('[VPFieldset] Field is visible, continuing');\n        status.push(field.isValid());\n      } else {\n        (0, _debug2.default)('[VPFieldset] Skipping hidden field', field);\n      }\n    } else {\n      status.push(field.isValid());\n    }\n\n    return status;\n  }, []);\n\n  this.clearMessages();\n  this._isValid = this.strategy(fieldSetStatus);\n  if (this._isValid) {\n    this.element.classList.remove(this.options.errorClass);\n\n    if (typeof this._onValidation.isValid.cb === 'function') {\n      this._onValidation.isValid.cb();\n    }\n    if (typeof this._onValidation.isValid.message === 'string') {\n      this.addMessage(this._onValidation.isValid.message, '-isValid');\n    }\n  } else {\n    this.element.classList.add(this.options.errorClass);\n    if (this.options.scrollTo === true) {\n      if (this.options.scrollAnchor instanceof Element) {\n        this.options.scrollAnchor.scrollIntoView();\n      } else {\n        // Scroll to the first error\n        var firstElement = this._fields.filter(function (f) {\n          return f._isValid === false;\n        })[0];\n        if (firstElement.element instanceof Element && typeof firstElement.element.scrollIntoView === 'function') {\n          firstElement.element.scrollIntoView();\n        }\n      }\n    }\n\n    if (typeof this._onValidation.isInvalid.cb === 'function') {\n      this._onValidation.isInvalid.cb();\n    }\n    if (typeof this._onValidation.isInvalid.message === 'string') {\n      this.addMessage(this._onValidation.isInvalid.message, '-isError');\n    }\n  }\n\n  return this._isValid;\n};\n\nVPFieldset.prototype.removeField = function (field) {\n  if (!(field instanceof _Field2.default)) {\n    throw new Error('[VPFieldset] Field must be an instanceof VPField');\n  }\n\n  var index = this._fields.indexOf(field);\n  if (index !== -1) {\n    this._fields = this._fields.splice(index, 1);\n  }\n};\n\nVPFieldset.prototype.watchField = function (field) {\n  var _this2 = this;\n\n  if (!(field instanceof _Field2.default)) {\n    throw new Error('Field must be an instance of VPField');\n  }\n\n  // TODO: Optimize by tracking state and only revalidating\n  // if internal state changes. Currently wasteful\n  field.addEventListener('onValidate', function (e, isValid) {\n    var valid = _this2.isValid();\n    var emit = _this2._isValid !== null;\n\n    if (emit) {\n      _this2.dispatchEvent(new Event('onValidate', {\n        bubbles: false, cancelable: false\n      }), valid);\n    }\n  });\n};\n\nVPFieldset.prototype.addField = function (field) {\n  if (!(field instanceof _Field2.default)) {\n    throw new Error('[VPFieldset] Field must be an instanceof VPField');\n  }\n  (0, _debug2.default)('[VPFieldset] Adding field');\n\n  this._fields.push(field);\n  if (this.options.watch === true) {\n    this.watchField(field);\n  }\n};\n\n// TODO: Enforce onValidate structure\nVPFieldset.prototype.createField = function (el, options, customRules, onValidate) {\n  if (!(el instanceof Element)) {\n    throw new Error('[VPFieldset] Field Element must be a valid DOMElement.');\n  }\n\n  var field = new _Field2.default(el, options, customRules, onValidate);\n  this._fields.push(field);\n  if (this.options.watch === true) {\n    this.watchField(field);\n  }\n\n  return field;\n};\n\nVPFieldset.prototype.findFields = function () {\n  var _this3 = this;\n\n  var vm = this;\n  var fields = Array.from(this.element.getElementsByClassName(this.options.fieldClass));\n\n  // TODO: Attribute parsing to fill in the gaps\n  this._fields = fields.map(function (field) {\n    var _field = new _Field2.default(field, {});\n    if (_this3.options.watch === true) {\n      _this3.watchField(_field);\n    }\n\n    return _field;\n  });\n};\n\n// EventTarget\nVPFieldset.prototype.listeners = null;\nVPFieldset.prototype.addEventListener = _events2.default.addEventListener;\nVPFieldset.prototype.removeEventListener = _events2.default.removeEventListener;\nVPFieldset.prototype.dispatchEvent = _events2.default.dispatchEvent;\n\n// DOM Messaging\nVPFieldset.prototype.clearMessages = _messaging2.default.clearMessages;\nVPFieldset.prototype.removeMessage = _messaging2.default.removeMessage;\nVPFieldset.prototype.addMessage = _messaging2.default.addMessage('VPMessage');\n\nexports.default = VPFieldset;\n\n//# sourceURL=webpack://ValidPlus/./src/Fieldset.js?");

/***/ }),

/***/ "./src/Validator.js":
/*!**************************!*\
  !*** ./src/Validator.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Fieldset = __webpack_require__(/*! ./Fieldset */ \"./src/Fieldset.js\");\n\nvar _Fieldset2 = _interopRequireDefault(_Fieldset);\n\nvar _debug = __webpack_require__(/*! ./util/debug */ \"./src/util/debug.js\");\n\nvar _debug2 = _interopRequireDefault(_debug);\n\nvar _mergeDeep = __webpack_require__(/*! ./util/mergeDeep */ \"./src/util/mergeDeep.js\");\n\nvar _mergeDeep2 = _interopRequireDefault(_mergeDeep);\n\nvar _isElemVisible = __webpack_require__(/*! ./util/isElemVisible */ \"./src/util/isElemVisible.js\");\n\nvar _isElemVisible2 = _interopRequireDefault(_isElemVisible);\n\nvar _events = __webpack_require__(/*! ./lib/events */ \"./src/lib/events.js\");\n\nvar _events2 = _interopRequireDefault(_events);\n\nvar _messaging = __webpack_require__(/*! ./lib/messaging */ \"./src/lib/messaging.js\");\n\nvar _messaging2 = _interopRequireDefault(_messaging);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Validator = function Validator(options) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (form === null) {\n    (0, _debug2.default)('[Validator] Non-strict fieldset matching.', 'Provide a form Element or ID to enable strict matching.');\n    this._form = null;\n    this._strict = false;\n\n    // Fieldsets being tracked by Validator\n    this._fieldsets = [];\n  } else {\n    this._form = ElementOrID(form);\n\n    // TODO: Add strict support (can only add elements contained within the field)\n    this._strict = true;\n\n    // TODO: Add child detection\n    this._fieldsets = []; // GetChildFieldsets\n  }\n\n  this.listeners = {};\n  // Conform to the child interfaces for messaging\n  this.element = this._form;\n  this.options = (0, _mergeDeep2.default)({\n    validateVisible: true,\n    fieldsetClass: 'VPFieldset',\n    errorClass: '-isError',\n    messageAnchor: null,\n    messagePOS: 'bottom',\n    lazy: true,\n    watch: false,\n    scrollAnchor: null,\n    scrollTo: true\n  }, options);\n  this.validationInputs = ['input', 'messagebox', 'select'];\n  if (Array.isArray(options.validationInputs)) {\n    this._options.validationInputs = this._options.validationInputs.concat(options.valiationInputs);\n  }\n\n  // TODO: Validate options\n  // TODO: Allow toggling options on whether to show messages or fire callbacks\n  this._onValidation = (0, _mergeDeep2.default)({\n    isValid: {\n      cb: null,\n      message: null\n    },\n    isInvalid: {\n      cb: null,\n      message: null\n    }\n  }, options.onValidation);\n  this._isValid = null;\n\n  this._messageNode = null;\n  this._messages = [];\n\n  this._strategies = {\n    'all': function all(fields) {\n      return fields.every(function (field) {\n        return field === true;\n      });\n    },\n    'some': function some(fields) {\n      return fields.some(function (field) {\n        return field === true;\n      });\n    },\n    'one': function one(fields) {\n      return fields.filter(function (field) {\n        return field === true;\n      }).length === 1;\n    }\n  };\n};\n\nValidator.prototype.isValid = function () {\n  var _this = this;\n\n  if (this.options.lazy) {\n    this._isValid = this._fieldsets.every(function (fieldset) {\n      if (_this.options.validateVisible) {\n        if ((0, _isElemVisible2.default)(fieldset.element)) {\n          (0, _debug2.default)('[VPValidator] Fieldset is visible, continuing');\n          fieldset.isValid();\n        } else {\n          (0, _debug2.default)('[VPValidator] Skipping hidden fieldset', fieldset);\n        }\n      } else {\n        fieldset.isValid();\n      }\n    });\n  } else {\n    this._isValid = this._fieldsets.reduce(function (isValid, fieldset) {\n      if (_this.options.validateVisible) {\n        if ((0, _isElemVisible2.default)(fieldset.element)) {\n          if (!fieldset.isValid()) {\n            isValid = false;\n          } else {\n            (0, _debug2.default)('[VPValidator] Skipping hidden fieldset', fieldset);\n          }\n        }\n      } else {\n        if (!fieldset.isValid()) {\n          isValid = false;\n        }\n      }\n\n      return isValid;\n    }, true);\n  }\n\n  if (this._isValid) {\n    if (this.element instanceof Element) {\n      this.element.classList.remove(this.options.errorClass);\n    }\n\n    if (typeof this._onValidation.isValid.cb === 'function') {\n      this._onValidation.isValid.cb();\n    }\n    if (typeof this._onValidation.isValid.message === 'string') {\n      this.addMessage(this._onValidation.isValid.message, '-isValid');\n    }\n  } else {\n    if (this.element instanceof Element) {\n      this.element.classList.add(this.options.errorClass);\n    }\n    if (this.options.scrollTo === true) {\n      var scrollElement = void 0;\n      if (this.options.scrollAnchor instanceof Element) {\n        scrollElement = this.options.scrollAnchor;\n      } else {\n        var firstElement = this._fieldsets.filter(function (f) {\n          return f._isValid === false;\n        })[0];\n        scrollElement = firstElement.element;\n      }\n\n      if (typeof scrollElement.scrollIntoView === 'function') {\n        scrollElement.scrollIntoView();\n      } else {\n        (0, _debug2.default)('[VP] Element Scrolling failed.');\n      }\n    }\n\n    if (typeof this._onValidation.isInvalid.cb === 'function') {\n      this._onValidation.isInvalid.cb();\n    }\n    if (typeof this._onValidation.isInvalid.message === 'string') {\n      this.addMessage(this._onValidation.isInvalid.message, '-isValid');\n    }\n  }\n\n  return this._isValid;\n};\n\n// TODO: Child state checks\n// TODO: Add MutationObserver on children\nValidator.prototype.addFieldset = function (fieldset) {\n  if (!(fieldset instanceof _Fieldset2.default)) {\n    throw new Error('[Validator] Fieldset must be an instanceof VPFieldset');\n  }\n\n  this._fieldsets.push(fieldset);\n  if (this.options.watch === true) {\n    this.watchFieldset(_fieldset);\n  }\n};\n\n// TODO: method to remove watchers\nValidator.prototype.watchFieldset = function (fieldset) {\n  var _this2 = this;\n\n  if (!(fieldset instanceof _Fieldset2.default)) return;\n\n  // TODO: Optimize by tracking state and only revalidating\n  // if internal state changes. Currently wasteful\n  fieldset.addEventListener('onValidate', function (e, isValid) {\n    var emit = _this2._isValid !== null;\n    _this2.isValid();\n  });\n};\n\n// TODO: Remove MutationObserver on children\nValidator.prototype.removeFieldset = function (fieldset) {\n  var index = this._fieldsets.indexOf(fieldset);\n  if (index !== -1) {\n    this._fieldsets = this._fieldsets.splice(index, 1);\n  }\n};\n\n// TODO: Append Predefined Fields w/ CB logic\n// TODO: Validate onValidate structure\n// TODO: Add MutationObserver on children\nValidator.prototype.createFieldset = function (fs, strategy, options, fields) {\n  var onValidate = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n  var fieldset = ElementOrID(fs, this._form);\n\n  if (fieldset === null) {\n    (0, _debug2.default)('[Validator] Requires a valid fieldset HTMLElement.');\n    return false;\n  }\n\n  var _strategy = this._strategies[strategy] || function () {\n    throw new Error('[Validator] Invalid Validation Strategy');\n  };\n  var _fieldset = new _Fieldset2.default(fieldset, _strategy, options, onValidate);\n  fields.forEach(function (field) {\n    _fieldset.addField(field);\n  });\n\n  this._fieldsets.push(_fieldset);\n  if (this.options.watch === true) {\n    this.watchFieldset(_fieldset);\n  }\n\n  return _fieldset;\n};\n\n// EventTarget\nValidator.prototype.listeners = null;\nValidator.prototype.addEventListener = _events2.default.addEventListener;\nValidator.prototype.removeEventListener = _events2.default.removeEventListener;\nValidator.prototype.dispatchEvent = _events2.default.dispatchEvent;\n\n// DOM Messaging\nValidator.prototype.clearMessages = _messaging2.default.clearMessages;\nValidator.prototype.removeMessage = _messaging2.default.removeMessage;\nValidator.prototype.addMessage = _messaging2.default.addMessage('VPMessage');\n\n// TODO: Strict enforcement\nvar ElementOrID = function ElementOrID(ElorID) {\n  var form = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n  if (ElorID instanceof Element) return ElorID;\n  if (typeof ElorID === 'string') {\n    var f = form !== null && form instanceof Element ? form.getElemenyById(ElorID) : document.getElementById(ElorID);\n\n    if (f instanceof Element) return f;\n  }\n\n  return null;\n};\n\nexports.default = Validator;\n\n//# sourceURL=webpack://ValidPlus/./src/Validator.js?");

/***/ }),

/***/ "./src/lib/events.js":
/*!***************************!*\
  !*** ./src/lib/events.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar addEventListener = function addEventListener(type, callback) {\n  if (!(type in this.listeners)) {\n    this.listeners[type] = [];\n  }\n  this.listeners[type].push(callback);\n};\nvar removeEventListener = function removeEventListener(type, callback) {\n  if (!(type in this.listeners)) return;\n\n  var stack = this.listeners[type];\n  for (var i = 0, l = stack.length; i < l; i++) {\n    if (stack[i] === callback) {\n      stack.splice(i, 1);\n      return;\n    }\n  }\n};\nvar dispatchEvent = function dispatchEvent(event, data) {\n  if (!(event.type in this.listeners)) return true;\n\n  var stack = this.listeners[event.type].slice();\n  for (var i = 0, l = stack.length; i < l; i++) {\n    stack[i].call(this, event, data);\n  }\n\n  return !event.defaultPrevented;\n};\n\nexports.default = {\n  addEventListener: addEventListener,\n  removeEventListener: removeEventListener,\n  dispatchEvent: dispatchEvent\n};\n\n//# sourceURL=webpack://ValidPlus/./src/lib/events.js?");

/***/ }),

/***/ "./src/lib/messaging.js":
/*!******************************!*\
  !*** ./src/lib/messaging.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _generateElement = __webpack_require__(/*! ../util/generateElement */ \"./src/util/generateElement.js\");\n\nvar _generateElement2 = _interopRequireDefault(_generateElement);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar clearMessages = function clearMessages() {\n  if (!(this._messageNode instanceof Element)) return;\n\n  while (this._messageNode.firstChild) {\n    this._messageNode.removeChild(this._messageNode.firstChild);\n  }\n};\n\nvar removeMessage = function removeMessage(message) {\n  var _this = this;\n\n  if (!(this._messageNode instanceof Element)) return;\n\n  Array.from(this._messageNode.children).forEach(function (child) {\n    if (child.innerHTML === message) {\n      _this._messageNode.removeChild(child);\n    }\n  });\n};\n\n// Externally expects element, messageNode as instance\nvar addMessage = function addMessage(base) {\n  return function (message, status) {\n    var msg = (0, _generateElement2.default)(message, base + ' ' + status);\n    var messages = this._messageNode;\n\n    if (messages === null) {\n      var _messages = (0, _generateElement2.default)('', base + 's');\n      var anchor = this.options.messageAnchor || this.element;\n      if (!(anchor instanceof Element)) return;\n\n      _messages.appendChild(msg);\n      switch (this.options.messagePOS) {\n        case 'top':\n          anchor.prepend(_messages);\n          break;\n        case 'bottom':\n        default:\n          anchor.appendChild(_messages);\n      }\n\n      this._messageNode = _messages;\n    } else {\n      if (Array.from(this._messageNode.children).every(function (m) {\n        return m.innerHTML !== msg.innerHTML;\n      })) {\n        this._messageNode.appendChild(msg);\n      }\n    }\n  };\n};\n\nexports.default = {\n  clearMessages: clearMessages,\n  removeMessage: removeMessage,\n  addMessage: addMessage\n};\n\n//# sourceURL=webpack://ValidPlus/./src/lib/messaging.js?");

/***/ }),

/***/ "./src/polyfills/arrayFrom.js":
/*!************************************!*\
  !*** ./src/polyfills/arrayFrom.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n  Array.from = function () {\n    var toStr = Object.prototype.toString;\n    var isCallable = function isCallable(fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n    var toInteger = function toInteger(value) {\n      var number = Number(value);\n      if (isNaN(number)) {\n        return 0;\n      }\n      if (number === 0 || !isFinite(number)) {\n        return number;\n      }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n    var toLength = function toLength(value) {\n      var len = toInteger(value);\n      return Math.min(Math.max(len, 0), maxSafeInteger);\n    };\n\n    // The length property of the from method is 1.\n    return function from(arrayLike /*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      var C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      var items = Object(arrayLike);\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T;\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      var len = toLength(items.length);\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 16. Let k be 0.\n      var k = 0;\n      // 17. Repeat, while k < len… (also steps a - h)\n      var kValue;\n      while (k < len) {\n        kValue = items[k];\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n        k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n    };\n  }();\n}\n\n//# sourceURL=webpack://ValidPlus/./src/polyfills/arrayFrom.js?");

/***/ }),

/***/ "./src/polyfills/classList.js":
/*!************************************!*\
  !*** ./src/polyfills/classList.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// 1. String.prototype.trim polyfill\nif (!\"\".trim) String.prototype.trim = function () {\n    return this.replace(/^[s﻿]+|[s﻿]+$/g, '');\n};\n\n(function (window) {\n    \"use strict\"; // prevent global namespace pollution\n\n    function checkIfValidClassListEntry(O, V) {\n        if (V === \"\") throw new DOMException(\"Failed to execute '\" + O + \"' on 'DOMTokenList': The token provided must not be empty.\");\n        if ((wsI = V.search(wsRE)) !== -1) throw new DOMException(\"Failed to execute '\" + O + \"' on 'DOMTokenList': \" + \"The token provided ('\" + V[wsI] + \"') contains HTML space characters, which are not valid in tokens.\");\n    }\n    // 2. Implement the barebones DOMTokenList livelyness polyfill\n    if (typeof DOMTokenList !== \"function\") (function (window) {\n        var document = window.document,\n            Object = window.Object,\n            hasOwnProp = Object.prototype.hasOwnProperty;\n        var defineProperty = Object.defineProperty,\n            allowTokenListConstruction = 0,\n            skipPropChange = 0;\n        var Element = window.Element,\n            wsI = 0,\n            wsRE = /[\\11\\12\\14\\15\\40]/; // WhiteSpace Regular Expression\n        function DOMTokenList() {\n            if (!allowTokenListConstruction) throw TypeError(\"Illegal constructor\"); // internally let it through\n        }\n        DOMTokenList.prototype.toString = DOMTokenList.prototype.toLocaleString = function () {\n            return this.value;\n        };\n        DOMTokenList.prototype.add = function () {\n            a: for (var v = 0, argLen = arguments.length, val = \"\", ele = this[\"uCL\"], proto = ele[\" uCLp\"]; v !== argLen; ++v) {\n                val = arguments[v] + \"\", checkIfValidClassListEntry(\"add\", val);\n                for (var i = 0, Len = proto.length, resStr = val; i !== Len; ++i) {\n                    if (this[i] === val) continue a;else resStr += \" \" + this[i];\n                }this[Len] = val, proto.length += 1, proto.value = resStr;\n            }\n            skipPropChange = 1, ele.className = proto.value, skipPropChange = 0;\n        };\n        DOMTokenList.prototype.remove = function () {\n            for (var v = 0, argLen = arguments.length, val = \"\", ele = this[\"uCL\"], proto = ele[\" uCLp\"]; v !== argLen; ++v) {\n                val = arguments[v] + \"\", checkIfValidClassListEntry(\"remove\", val);\n                for (var i = 0, Len = proto.length, resStr = \"\", is = 0; i !== Len; ++i) {\n                    if (is) {\n                        this[i - 1] = this[i];\n                    } else {\n                        if (this[i] !== val) {\n                            resStr += this[i] + \" \";\n                        } else {\n                            is = 1;\n                        }\n                    }\n                }if (!is) continue;\n                delete this[Len], proto.length -= 1, proto.value = resStr;\n            }\n            skipPropChange = 1, ele.className = proto.value, skipPropChange = 0;\n        };\n        window.DOMTokenList = DOMTokenList;\n        function whenPropChanges() {\n            var evt = window.event,\n                prop = evt.propertyName;\n            if (!skipPropChange && (prop === \"className\" || prop === \"classList\" && !defineProperty)) {\n                var target = evt.srcElement,\n                    protoObjProto = target[\" uCLp\"],\n                    strval = \"\" + target[prop];\n                var tokens = strval.trim().split(wsRE),\n                    resTokenList = target[prop === \"classList\" ? \" uCL\" : \"classList\"];\n                var oldLen = protoObjProto.length;\n                a: for (var cI = 0, cLen = protoObjProto.length = tokens.length, sub = 0; cI !== cLen; ++cI) {\n                    for (var innerI = 0; innerI !== cI; ++innerI) {\n                        if (tokens[innerI] === tokens[cI]) {\n                            sub++;continue a;\n                        }\n                    }resTokenList[cI - sub] = tokens[cI];\n                }\n                for (var i = cLen - sub; i < oldLen; ++i) {\n                    delete resTokenList[i];\n                } //remove trailing indexs\n                if (prop !== \"classList\") return;\n                skipPropChange = 1, target.classList = resTokenList, target.className = strval;\n                skipPropChange = 0, resTokenList.length = tokens.length - sub;\n            }\n        }\n        function polyfillClassList(ele) {\n            if (!ele || !(\"innerHTML\" in ele)) throw TypeError(\"Illegal invocation\");\n            srcEle.detachEvent(\"onpropertychange\", whenPropChanges); // prevent duplicate handler infinite loop\n            allowTokenListConstruction = 1;\n            try {\n                var _protoObj = function _protoObj() {};\n\n                _protoObj.prototype = new DOMTokenList();\n            } finally {\n                allowTokenListConstruction = 0;\n            }\n            var protoObjProto = protoObj.prototype,\n                resTokenList = new protoObj();\n            a: for (var toks = ele.className.trim().split(wsRE), cI = 0, cLen = toks.length, sub = 0; cI !== cLen; ++cI) {\n                for (var innerI = 0; innerI !== cI; ++innerI) {\n                    if (toks[innerI] === toks[cI]) {\n                        sub++;continue a;\n                    }\n                }this[cI - sub] = toks[cI];\n            }\n            protoObjProto.length = Len - sub, protoObjProto.value = ele.className, protoObjProto[\" uCL\"] = ele;\n            if (defineProperty) {\n                defineProperty(ele, \"classList\", { // IE8 & IE9 allow defineProperty on the DOM\n                    enumerable: 1, get: function get() {\n                        return resTokenList;\n                    },\n                    configurable: 0, set: function set(newVal) {\n                        skipPropChange = 1, ele.className = protoObjProto.value = newVal += \"\", skipPropChange = 0;\n                        var toks = newVal.trim().split(wsRE),\n                            oldLen = protoObjProto.length;\n                        a: for (var cI = 0, cLen = protoObjProto.length = toks.length, sub = 0; cI !== cLen; ++cI) {\n                            for (var innerI = 0; innerI !== cI; ++innerI) {\n                                if (toks[innerI] === toks[cI]) {\n                                    sub++;continue a;\n                                }\n                            }resTokenList[cI - sub] = toks[cI];\n                        }\n                        for (var i = cLen - sub; i < oldLen; ++i) {\n                            delete resTokenList[i];\n                        } //remove trailing indexs\n                    }\n                });defineProperty(ele, \" uCLp\", { // for accessing the hidden prototype\n                    enumerable: 0, configurable: 0, writeable: 0, value: protoObj.prototype\n                });defineProperty(protoObjProto, \" uCL\", {\n                    enumerable: 0, configurable: 0, writeable: 0, value: ele\n                });\n            } else {\n                ele.classList = resTokenList, ele[\" uCL\"] = resTokenList, ele[\" uCLp\"] = protoObj.prototype;\n            }\n            srcEle.attachEvent(\"onpropertychange\", whenPropChanges);\n        }\n        try {\n            // Much faster & cleaner version for IE8 & IE9:\n            // Should work in IE8 because Element.prototype instanceof Node is true according to the specs\n            window.Object.defineProperty(window.Element.prototype, \"classList\", {\n                enumerable: 1, get: function get(val) {\n                    if (!hasOwnProp.call(ele, \"classList\")) polyfillClassList(this);\n                    return this.classList;\n                },\n                configurable: 0, set: function set(val) {\n                    this.className = val;\n                }\n            });\n        } catch (e) {\n            // Less performant fallback for older browsers (IE 6-8):\n            window[\" uCL\"] = polyfillClassList;\n            // the below code ensures polyfillClassList is applied to all current and future elements in the doc.\n            document.documentElement.firstChild.appendChild(document.createElement('style')).styleSheet.cssText = '_*{x-uCLp:expression(!this.hasOwnProperty(\"classList\")&&window[\" uCL\"](this))}' + //  IE6\n            '[class]{x-uCLp/**/:expression(!this.hasOwnProperty(\"classList\")&&window[\" uCL\"](this))}' //IE7-8\n            ;\n        }\n    })();\n    // 3. Patch in unsupported methods in DOMTokenList\n    (function (DOMTokenListProto, testClass) {\n        if (!DOMTokenListProto.item) DOMTokenListProto.item = function (i) {\n            function NullCheck(n) {\n                return n === void 0 ? null : n;\n            }return NullCheck(this[i]);\n        };\n        if (!DOMTokenListProto.toggle || testClass.toggle(\"a\", 0) !== false) DOMTokenListProto.toggle = function (val) {\n            if (arguments.length > 1) return this[arguments[1] ? \"add\" : \"remove\"](val), !!arguments[1];\n            var oldValue = this.value;\n            return this.remove(oldToken), oldValue === this.value && (this.add(val), true) /*|| false*/;\n        };\n        if (!DOMTokenListProto.replace || typeof testClass.replace(\"a\", \"b\") !== \"boolean\") DOMTokenListProto.replace = function (oldToken, newToken) {\n            checkIfValidClassListEntry(\"replace\", oldToken), checkIfValidClassListEntry(\"replace\", newToken);\n            var oldValue = this.value;\n            return this.remove(oldToken), this.value !== oldValue && (this.add(newToken), true);\n        };\n        if (!DOMTokenListProto.contains) DOMTokenListProto.contains = function (value) {\n            for (var i = 0, Len = this.length; i !== Len; ++i) {\n                if (this[i] === value) return true;\n            }return false;\n        };\n        if (!DOMTokenListProto.forEach) DOMTokenListProto.forEach = function (f) {\n            if (arguments.length === 1) for (var i = 0, Len = this.length; i !== Len; ++i) {\n                f(this[i], i, this);\n            } else for (var i = 0, Len = this.length, tArg = arguments[1]; i !== Len; ++i) {\n                f.call(tArg, this[i], i, this);\n            }\n        };\n        if (!DOMTokenListProto.entries) DOMTokenListProto.entries = function () {\n            var nextIndex = 0,\n                that = this;\n            return { next: function next() {\n                    return nextIndex < that.length ? { value: [nextIndex, that[nextIndex]], done: false } : { done: true };\n                } };\n        };\n        if (!DOMTokenListProto.values) DOMTokenListProto.values = function () {\n            var nextIndex = 0,\n                that = this;\n            return { next: function next() {\n                    return nextIndex < that.length ? { value: that[nextIndex], done: false } : { done: true };\n                } };\n        };\n        if (!DOMTokenListProto.keys) DOMTokenListProto.keys = function () {\n            var nextIndex = 0,\n                that = this;\n            return { next: function next() {\n                    return nextIndex < that.length ? { value: nextIndex, done: false } : { done: true };\n                } };\n        };\n    })(window.DOMTokenList.prototype, window.document.createElement(\"div\").classList);\n})(window);\n\n//# sourceURL=webpack://ValidPlus/./src/polyfills/classList.js?");

/***/ }),

/***/ "./src/polyfills/index.js":
/*!********************************!*\
  !*** ./src/polyfills/index.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n__webpack_require__(/*! ./prepend */ \"./src/polyfills/prepend.js\");\n\n__webpack_require__(/*! ./classList */ \"./src/polyfills/classList.js\");\n\n__webpack_require__(/*! ./arrayFrom */ \"./src/polyfills/arrayFrom.js\");\n\n//# sourceURL=webpack://ValidPlus/./src/polyfills/index.js?");

/***/ }),

/***/ "./src/polyfills/prepend.js":
/*!**********************************!*\
  !*** ./src/polyfills/prepend.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\n// Source: https://github.com/jserz/js_piece/blob/master/DOM/ParentNode/prepend()/prepend().md\n(function (arr) {\n  arr.forEach(function (item) {\n    if (item.hasOwnProperty('prepend')) {\n      return;\n    }\n    Object.defineProperty(item, 'prepend', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: function prepend() {\n        var argArr = Array.prototype.slice.call(arguments),\n            docFrag = document.createDocumentFragment();\n\n        argArr.forEach(function (argItem) {\n          var isNode = argItem instanceof Node;\n          docFrag.appendChild(isNode ? argItem : document.createTextNode(String(argItem)));\n        });\n\n        this.insertBefore(docFrag, this.firstChild);\n      }\n    });\n  });\n})([Element.prototype, Document.prototype, DocumentFragment.prototype]);\n\n//# sourceURL=webpack://ValidPlus/./src/polyfills/prepend.js?");

/***/ }),

/***/ "./src/util/debug.js":
/*!***************************!*\
  !*** ./src/util/debug.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default =  true ? function () {\n  var _console;\n\n  for (var _len = arguments.length, msg = Array(_len), _key = 0; _key < _len; _key++) {\n    msg[_key] = arguments[_key];\n  }\n\n  return (_console = console).log.apply(_console, ['[Debug]'].concat(msg));\n} : undefined;\n\n//# sourceURL=webpack://ValidPlus/./src/util/debug.js?");

/***/ }),

/***/ "./src/util/generateElement.js":
/*!*************************************!*\
  !*** ./src/util/generateElement.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (message, className) {\n  var el = document.createElement('div');\n  el.className = className;\n  el.innerHTML = message;\n\n  return el;\n};\n\n//# sourceURL=webpack://ValidPlus/./src/util/generateElement.js?");

/***/ }),

/***/ "./src/util/isElemVisible.js":
/*!***********************************!*\
  !*** ./src/util/isElemVisible.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function (element) {\n  if (element instanceof Element) {\n    return !!(element.offsetWidth || element.offsetHeight || element.getClientRects().length);\n  } else {\n    return null;\n  }\n};\n\n//# sourceURL=webpack://ValidPlus/./src/util/isElemVisible.js?");

/***/ }),

/***/ "./src/util/mergeDeep.js":
/*!*******************************!*\
  !*** ./src/util/mergeDeep.js ***!
  \*******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Simple object check.\n * @param item\n * @returns {boolean}\n */\nvar isObject = function isObject(item) {\n  return item && (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && !Array.isArray(item);\n};\n\n/**\n * Deep merge two objects.\n * @param target\n * @param ...sources\n */\nvar mergeDeep = function mergeDeep(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (!sources.length) return target;\n  var source = sources.shift();\n\n  if (isObject(target) && isObject(source)) {\n    for (var key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, _defineProperty({}, key, {}));\n        mergeDeep(target[key], source[key]);\n      } else {\n        Object.assign(target, _defineProperty({}, key, source[key]));\n      }\n    }\n  }\n\n  return mergeDeep.apply(undefined, [target].concat(sources));\n};\n\nexports.default = mergeDeep;\n\n//# sourceURL=webpack://ValidPlus/./src/util/mergeDeep.js?");

/***/ }),

/***/ "./validplus.js":
/*!**********************!*\
  !*** ./validplus.js ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Validator = __webpack_require__(/*! @/Validator */ \"./src/Validator.js\");\n\nvar _Validator2 = _interopRequireDefault(_Validator);\n\nvar _Fieldset = __webpack_require__(/*! @/Fieldset */ \"./src/Fieldset.js\");\n\nvar _Fieldset2 = _interopRequireDefault(_Fieldset);\n\nvar _Field = __webpack_require__(/*! @/Field */ \"./src/Field.js\");\n\nvar _Field2 = _interopRequireDefault(_Field);\n\nvar _polyfills = __webpack_require__(/*! @/polyfills */ \"./src/polyfills/index.js\");\n\nvar _polyfills2 = _interopRequireDefault(_polyfills);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ValidPlus = {\n  Validator: _Validator2.default,\n  Fieldset: _Fieldset2.default,\n  Field: _Field2.default\n};\n\nexports.default = ValidPlus;\n\n//# sourceURL=webpack://ValidPlus/./validplus.js?");

/***/ })

/******/ });
});