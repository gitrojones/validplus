{"version":3,"sources":["webpack://validplus/./src/vue/Validatable.js","webpack://validplus/./src/vue/Fieldset.js","webpack://validplus/./src/vue/Field.js","webpack://validplus/./src/vue/index.ssr.js","webpack://validplus/external \"validplus\"","webpack://validplus/webpack/bootstrap","webpack://validplus/webpack/startup","webpack://validplus/webpack/runtime/define property getters","webpack://validplus/webpack/runtime/hasOwnProperty shorthand","webpack://validplus/webpack/runtime/make namespace object"],"names":["Validatable","props","validator","type","Object","default","this","VPNewValidator","VPProvideValidator","VPValidator","beforeMount","VP","require","mounted","$element","$el","generateMessageNode","provide","providing","inject","console","log","Validator","DeferredMessageAnchor","methods","VPCreateField","el","options","rules","onValidation","Field","VPCreateFieldset","strategy","fields","fieldset","createFieldset","VPFieldSets","push","VPChangeAnchor","VPisValid","isValid","VPField","VPFieldset","dispatchValidationStatus","$nextTick","$emit","then","beforeDestroy","forEach","fs","removeFieldset","data","Fieldset","VPOptions","VPValid","VPStrategy","Function","String","VPFields","Array","mixins","VPStrategy$","VPOptions$","VPFields$","VPValid$","VPGatherFields","watch","Invalid","Message","VPRemove","keys","$slots","slot","field","_isVue","$once","addField","$children","VPRules","VPRules$","VPAddRule","rule","$options","CustomRules","error","VP_SSR","VPVue","env","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","__webpack_modules__","d","definition","key","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value"],"mappings":"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","file":"ssr/vpvue.js","sourcesContent":["export const Validatable = {\n  props: {\n    validator: {\n      type: Object,\n      default () {\n        if (this.VPNewValidator) {\n          this.VPProvideValidator = true\n        }\n\n        return this.VPValidator\n      }\n    }\n  },\n  beforeMount () {\n    this.VP = require('validplus').ValidPlus\n  },\n  mounted () {\n    // Fulfill anchor requirements deferred\n    // when elements are available\n    if (this.VPNewValidator) {\n      this.validator.$element = this.$el\n      this.validator.generateMessageNode(this.$el)\n    }\n  },\n  provide () {\n    let providing = {}\n    if (this.VPProvideValidator) {\n      providing['VPValidator'] = this.validator\n    }\n\n    return providing\n  },\n  inject: {\n    VPValidator: {\n      default () {\n        this.VPNewValidator = true\n        console.log('[VPVue] Validator not provided, injecting new validator.')\n        const VP = require('validplus').ValidPlus\n        return new VP.Validator({\n          DeferredMessageAnchor: true\n        })\n      }\n    }\n  },\n  methods: {\n    VPCreateField (el, options, rules, onValidation) {\n      return new this.VP.Field(el, options, rules, onValidation)\n    },\n    VPCreateFieldset (el, strategy, options, fields, onValidation) {\n      const fieldset = this.validator.createFieldset(el, strategy, options, fields, onValidation)\n      this.VPFieldSets.push(fieldset)\n\n      return fieldset\n    },\n    VPChangeAnchor (el) {\n      this.validator.generateMessageNode(el)\n    },\n    VPisValid () {\n      let isValid\n      if (this.VPField) {\n        isValid = this.VPField.isValid()\n      } else if (this.VPFieldset) {\n        isValid = this.VPFieldset.isValid()\n      } else {\n        isValid = this.validator.isValid()\n      }\n\n      const dispatchValidationStatus = (isValid) => {\n        this.$nextTick(() => {\n          if (isValid) {\n            this.$emit('isValid')\n          } else {\n            this.$emit('isInvalid')\n          }\n        })\n      }\n\n      if (typeof isValid === 'boolean') {\n        dispatchValidationStatus(isValid)\n        return isValid\n      } else if (typeof isValid.then === 'function') {\n        return isValid.then((isValid) => {\n          dispatchValidationStatus(isValid)\n          return isValid\n        })\n      }\n    }\n  },\n  beforeDestroy () {\n    this.VPFieldSets.forEach((fs) => {\n      console.log('[VPVue] Cleaning up fieldsets', fs)\n      this.validator.removeFieldset(fs)\n    })\n  },\n  data () {\n    return {\n      VPFieldSets: []\n    }\n  }\n}\n\nexport default Validatable","import { Validatable } from './Validatable'\n\nexport const Fieldset = {\n  props: {\n    VPOptions: {\n      type: Object\n    },\n    VPValid: {\n      type: Object\n    },\n    VPStrategy: {\n      type: [ Function, String ]\n    },\n    VPFields: {\n      type: Array\n    }\n  },\n  mixins: [ Validatable ],\n  mounted () {\n    this.VPFieldset = this.VPCreateFieldset(\n      this.$el,\n      this.VPStrategy$,\n      this.VPOptions$,\n      this.VPFields$,\n      this.VPValid$\n    )\n\n    this.VPGatherFields()\n  },\n  watch: {\n    'VPFieldset.$valid': function (isValid) {\n      if (isValid) {\n        this.$emit('isValid', this)\n      } else {\n        this.$emit('isInvalid', this)\n      }\n    }\n  },\n  data () {\n    return {\n      VPFieldset: null,\n\n      VPStrategy$: this.VPStrategy || 'all',\n      VPFields$: this.VPFields || [],\n      VPOptions$: this.VPOptions || {},\n      VPValid$: this.VPValid || {\n        Invalid: {\n          Message: 'Input is invalid'\n        }\n      }\n    }\n  },\n  methods: {\n    VPRemove () {\n      this.$emit('VPRemoveFieldset', this.VPFieldset);\n    },\n    VPChangeAnchor (el) {\n      this.VPFieldset.generateMessageNode(el)\n    },\n\n    VPGatherFields () {\n      Object.keys(this.$slots).forEach((slot) => {\n        const data = this.$slots[slot]\n\n        data.forEach((field) => {\n          if (field._isVue) {\n            field.$once('VPAddField', (VPField) => {\n              this.VPFieldset.addField(VPField)\n            })\n          }\n        })\n      })\n\n      this.$children.forEach((field) => {\n        if (field._isVue) {\n          field.$once('VPAddField', (field) => {\n            this.VPFieldset.addField(field)\n          })\n        }\n      })\n    }\n  }\n}\n\nexport default Fieldset\n","import { Validatable } from './Validatable'\n\nexport const Field = {\n  props: {\n    VPOptions: {\n      type: Object\n    },\n    VPRules: {\n      type: Array\n    },\n    VPValid: {\n      type: Object\n    }\n  },\n  mixins: [ Validatable ],\n  watch: {\n    'VPField.$valid': function (isValid) {\n      if (isValid) {\n        this.$emit('isValid', this)\n      } else {\n        this.$emit('isInvalid', this)\n      }\n    }\n  },\n  mounted () {\n    this.VPField = this.VPCreateField(\n      this.$el,\n      this.VPOptions$,\n      this.VPRules$,\n      this.VPValid$\n    )\n\n    this.$nextTick(() => {\n      this.$emit('VPAddField', this.VPField)\n    })\n  },\n  data () {\n    return {\n      VPField: {},\n      VPOptions$: this.VPOptions || {},\n      VPRules$: this.VPRules || [],\n      VPValid$: this.VPValid || {}\n    }\n  },\n  methods: {\n    VPRemove () {\n      this.$emit('VPRemoveField', this.VPField);\n    },\n\n    VPChangeAnchor (el) {\n      this.VPField.generateMessageNode(el)\n    },\n\n    VPAddRule (rule) {\n      if (typeof rule === 'function') {\n        this.VPField.$options.CustomRules.push(rule)\n      } else {\n        console.error('[VPField] Rule must be a function that resolves to a promise')\n      }\n    },\n\n    VPGatherFields () {\n      Object.keys(this.$slots).forEach((slot) => {\n        const data = this.$slots[slot]\n\n        data.forEach((field) => {\n          if (field._isVue) {\n            field.$once('AddField', function (field) {\n              this.VPFields.push(field)\n            })\n          }\n        })\n      })\n\n      this.$children.forEach((field) => {\n        if (field._isVue) {\n          field.$once('AddField', function (field) {\n            this.VPFields.push(field)\n          })\n        }\n      })\n    }\n  }\n}\n\nexport default Field","import { Validatable } from './Validatable'\nimport { Fieldset } from './Fieldset'\nimport { Field } from './Field'\n\nconst VP = {\n  Validatable,\n  Fieldset,\n  Field\n}\n\nconst VP_SSR = {\n  Validatable: {},\n  Fieldset: {},\n  Field: {}\n}\n\nexport const VPVue = (env) => {\n  return (env === 'client')\n  ? VP\n  : VP_SSR\n}\n\nexport default VPVue\n","module.exports = require(\"validplus\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(1973);\n","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};"],"sourceRoot":""}